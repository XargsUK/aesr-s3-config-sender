name: Release

on:
  push:
    branches:
      - main
      - feature/**

permissions:
  contents: write
  pull-requests: read

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      new_version: ${{ steps.format_version.outputs.version }}
      is_beta: ${{ steps.check_branch.outputs.is_beta }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check branch
        id: check_branch
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          if [[ $BRANCH == feature/* ]]; then
            echo "is_beta=true" >> $GITHUB_OUTPUT
          else
            echo "is_beta=false" >> $GITHUB_OUTPUT
          fi

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          release_branches: main
          pre_release_branches: feature/*
          append_to_pre_release_tag: beta

      - name: Format version
        id: format_version
        run: |
          TAG=${{ steps.tag_version.outputs.new_tag }}
          # Remove v prefix for manifest files
          echo "version=${TAG#v}" >> $GITHUB_OUTPUT

  build:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Update versions
        run: |
          VERSION=${{ needs.version.outputs.new_version }}
          # Update package.json
          npm version $VERSION --no-git-tag-version --allow-same-version

          # Update manifest files
          for file in src/manifest/manifest-*.json; do
            jq ".version = \"$VERSION\"" $file > temp.json && mv temp.json $file
          done

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Build Chrome extension
        run: npm run build:chrome

      - name: Build Firefox extension
        run: npm run build:firefox

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.version.outputs.new_tag }}
          name: Release ${{ needs.version.outputs.new_tag }}
          draft: false
          prerelease: ${{ needs.version.outputs.is_beta }}
          body: ${{ needs.version.outputs.changelog }}
          files: |
            dist/aesr-s3-config-sender-chrome.zip
            dist/aesr-s3-config-sender-firefox.zip
